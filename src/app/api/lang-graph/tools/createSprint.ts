import { DynamicStructuredTool } from "@langchain/core/tools";
import { createNewSprint } from "../utils/createNewSprint";
import z from "zod";


export const createNewSprintTool = new DynamicStructuredTool({
  name: "create_sprint_tool",
  description: "Creates a new sprint in a project management system.",
  schema: z.object({
    name: z.string().describe("name of the sprint"),
    goal: z
      .string()
      .describe(
        "goal of the sprint, can be provided by user or generated by assistant"
      ),
    startDate: z
      .string()
      .describe(
        "starting date of the sprint, it should be in this format: 2025-07-24T00:00:00+00:00"
      ),
    endDate: z
      .string()
      .describe(
        "ending date of the sprint, it should be in this format: 2025-07-24T23:59:59+00:00"
      ),
    addRelevantIssues: z
      .boolean()
      .describe(
        "True, If user want to add relevant issues to the sprint, and false, if user want to create the sprint without any issue. Default false."
      ),
  }),
  func: async ({
    name,
    goal,
    startDate,
    endDate,
    addRelevantIssues,
  }: {
    name: string;
    goal: string;
    startDate: string;
    endDate: string;
    addRelevantIssues: boolean;
  }) => {
    const result = await createNewSprint({
      name: name,
      goal: goal,
      startDate: startDate,
      endDate: endDate,
      addRelevantIssues: addRelevantIssues,
    })
    return {
      message: `Created sprint "${result?.name}" with ID ${result?.id}.`,
      content: {
        sprint: result,
      },
    };
  },
});